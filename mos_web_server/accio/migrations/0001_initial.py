# Generated by Django 3.2.14 on 2022-07-20 06:42

import django.core.validators
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Cartridge',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('description', models.TextField(blank=True, default='', null=True)),
                ('activated', models.BooleanField(default=True)),
                ('deleted', models.BooleanField(default=False)),
                ('updated', models.DateTimeField(auto_now=True)),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('code', models.CharField(max_length=128, unique=True)),
                ('udi_di', models.CharField(blank=True, choices=[('', 'NONE'), ('06975328690018', '06975328690018 (2-HG)')], default='', max_length=14, null=True)),
                ('polarity', models.TextField(choices=[('NEG', 'NEG'), ('POS', 'POS'), ('ALL', 'ALL')])),
                ('pre_spary_time', models.PositiveIntegerField(default=500)),
                ('spray_voltage_pos', models.PositiveIntegerField(default=4500)),
                ('spray_voltage_neg', models.PositiveIntegerField(default=3000)),
            ],
            options={
                'verbose_name': 'cartridge',
                'verbose_name_plural': 'cartridges',
            },
        ),
        migrations.CreateModel(
            name='Compound',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('description', models.TextField(blank=True, default='', null=True)),
                ('activated', models.BooleanField(default=True)),
                ('deleted', models.BooleanField(default=False)),
                ('updated', models.DateTimeField(auto_now=True)),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('code', models.CharField(max_length=6, unique=True)),
                ('name_cn', models.CharField(blank=True, default='', max_length=100)),
                ('name_en', models.CharField(blank=True, default='', max_length=100)),
                ('cas', models.CharField(blank=True, default='', max_length=100)),
                ('mass', models.DecimalField(decimal_places=6, max_digits=12)),
                ('formula', models.CharField(blank=True, default='', max_length=100)),
                ('chemical_prop', models.CharField(blank=True, default='', max_length=100)),
                ('physical_prop', models.CharField(blank=True, default='', max_length=100)),
                ('structural_formula', models.ImageField(blank=True, default='', max_length=1024, upload_to='uploads/structural_formula/%Y/%m/%d/%H/%M/%S/')),
                ('safety_data_sheet', models.FileField(blank=True, default='', max_length=1024, upload_to='uploads/safety_data_sheet/%Y/%Y/%m/%d/%H/%M/%S/')),
                ('extra_data', models.JSONField(blank=True, default=dict)),
            ],
            options={
                'verbose_name': 'compound',
                'verbose_name_plural': 'compounds',
            },
        ),
        migrations.CreateModel(
            name='CompoundCodeCounter',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
        ),
        migrations.CreateModel(
            name='CompoundTag',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('description', models.TextField(blank=True, default='', null=True)),
                ('activated', models.BooleanField(default=True)),
                ('deleted', models.BooleanField(default=False)),
                ('updated', models.DateTimeField(auto_now=True)),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('name', models.CharField(max_length=128, unique=True)),
            ],
            options={
                'verbose_name': 'compound tag',
                'verbose_name_plural': 'compound tags',
            },
        ),
        migrations.CreateModel(
            name='Experiment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('description', models.TextField(blank=True, default='', null=True)),
                ('activated', models.BooleanField(default=True)),
                ('deleted', models.BooleanField(default=False)),
                ('updated', models.DateTimeField(auto_now=True)),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('location', models.CharField(blank=True, default='', max_length=100)),
                ('temperature', models.DecimalField(decimal_places=6, max_digits=12)),
                ('humidity', models.DecimalField(decimal_places=6, max_digits=12)),
            ],
            options={
                'verbose_name': 'experiment',
                'verbose_name_plural': 'experiments',
            },
        ),
        migrations.CreateModel(
            name='QuantMethod',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('description', models.TextField(blank=True, default='', null=True)),
                ('activated', models.BooleanField(default=True)),
                ('deleted', models.BooleanField(default=False)),
                ('updated', models.DateTimeField(auto_now=True)),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('code', models.CharField(max_length=6, unique=True)),
                ('quant_type', models.TextField(choices=[('IS', 'IS'), ('ES', 'ES')])),
            ],
            options={
                'verbose_name': 'quant method',
                'verbose_name_plural': 'quant methods',
            },
        ),
        migrations.CreateModel(
            name='QuantMethodCodeCounter',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
        ),
        migrations.CreateModel(
            name='Spectrum',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('ordering', models.PositiveIntegerField(default=0, verbose_name='ordering')),
                ('description', models.TextField(blank=True, default='', null=True)),
                ('activated', models.BooleanField(default=True)),
                ('deleted', models.BooleanField(default=False)),
                ('updated', models.DateTimeField(auto_now=True)),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('precursor_mz', models.DecimalField(decimal_places=6, max_digits=12)),
                ('polarity', models.TextField(choices=[('NEG', 'NEG'), ('POS', 'POS'), ('ALL', 'ALL')])),
                ('cid_q', models.DecimalField(decimal_places=6, max_digits=12)),
                ('cid_amp', models.DecimalField(decimal_places=6, max_digits=12)),
                ('inj_lmco_mz', models.PositiveSmallIntegerField(default=50, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(1000)])),
                ('iso1_amp', models.DecimalField(decimal_places=6, max_digits=12)),
                ('iso2_amp', models.DecimalField(decimal_places=6, max_digits=12)),
                ('average', models.PositiveSmallIntegerField(default=1, validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(10)])),
                ('peaks', models.JSONField(blank=True, default=dict)),
                ('extra_params', models.JSONField(blank=True, default=dict)),
                ('precursor_mz_ms3', models.DecimalField(decimal_places=6, default=0, max_digits=12)),
                ('iso_amp_ms3', models.DecimalField(decimal_places=6, default=0, max_digits=12)),
                ('cid_amp_ms3', models.DecimalField(decimal_places=6, default=0, max_digits=12)),
                ('scan_mass_start', models.PositiveSmallIntegerField(default=50, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(1000)])),
                ('scan_mass_end', models.PositiveSmallIntegerField(default=1000, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(5000)])),
            ],
            options={
                'verbose_name': 'spectrum',
                'verbose_name_plural': 'spectra',
                'ordering': ['ordering'],
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='SpectrumTag',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('description', models.TextField(blank=True, default='', null=True)),
                ('activated', models.BooleanField(default=True)),
                ('deleted', models.BooleanField(default=False)),
                ('updated', models.DateTimeField(auto_now=True)),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('name', models.CharField(max_length=128, unique=True)),
            ],
            options={
                'verbose_name': 'spectrum tag',
                'verbose_name_plural': 'spectrum tags',
            },
        ),
    ]
